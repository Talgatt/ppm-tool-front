{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post  => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest); // extract token from res.data\n\n    const {\n      token\n    } = res.data; // store the token in the localStorage\n\n    localStorage.setItem(\"jwtToken\", MediaStreamTrackAudioSourceNode); // set our token in the header ***\n\n    setJWTToken(token); // decode token on React\n    // dispatch to our securityReducer\n  } catch (error) {}\n};","map":{"version":3,"sources":["/Users/talgattulegenov/Desktop/PPMToolFullStack React+Java/ppmtool-react-client/src/actions/securityActions.js"],"names":["axios","GET_ERRORS","setJWTToken","createNewUser","newUser","history","dispatch","post","push","type","payload","err","response","data","login","LoginRequest","res","token","localStorage","setItem","MediaStreamTrackAudioSourceNode","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB,MAAOC,QAAP,IAAoB;AACrE,MAAI;AACF,UAAMN,KAAK,CAACO,IAAN,CAAW,qBAAX,EAAkCH,OAAlC,CAAN;AACAC,IAAAA,OAAO,CAACG,IAAR,CAAa,QAAb;AACAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAER,UADC;AAEPS,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAER,UADC;AAEPS,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CAdM;AAgBP,OAAO,MAAMC,KAAK,GAAIC,YAAD,IAAkB,MAAOT,QAAP,IAAoB;AACzD,MAAI;AACF;AACA,UAAMU,GAAG,GAAG,MAAMhB,KAAK,CAACO,IAAN,CAAW,kBAAX,EAA+BQ,YAA/B,CAAlB,CAFE,CAGF;;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAYD,GAAG,CAACH,IAAtB,CAJE,CAKF;;AACAK,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,+BAAjC,EANE,CAOF;;AACAlB,IAAAA,WAAW,CAACe,KAAD,CAAX,CARE,CASF;AACA;AACD,GAXD,CAWE,OAAOI,KAAP,EAAc,CAAE;AACnB,CAbM","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\n\nexport const createNewUser = (newUser, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const login = (LoginRequest) => async (dispatch) => {\n  try {\n    // post  => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    // extract token from res.data\n    const { token } = res.data;\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", MediaStreamTrackAudioSourceNode);\n    // set our token in the header ***\n    setJWTToken(token);\n    // decode token on React\n    // dispatch to our securityReducer\n  } catch (error) {}\n};\n"]},"metadata":{},"sourceType":"module"}