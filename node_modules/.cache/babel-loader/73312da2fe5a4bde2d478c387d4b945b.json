{"ast":null,"code":"import { GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"../actions/types\";\nimport { act } from \"react-dom/test-utils\";\nconst initialState = {\n  project_tasks: [],\n  project_task: {}\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return { ...state,\n        project_tasks: action.payload\n      };\n\n    case GET_PROJECT_TASK:\n      return { ...state,\n        project_task: action.payload\n      };\n\n    case DELETE_PROJECT_TASK:\n      return { ...state,\n        project_tasks: state.project_tasks.filter(project_task => project_task.projectSequence !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/talgattulegenov/Desktop/PPMToolFullStack React+Java/ppmtool-react-client/src/reducers/backlogReducer.js"],"names":["GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","act","initialState","project_tasks","project_task","state","action","type","payload","filter","projectSequence"],"mappings":"AAAA,SACEA,WADF,EAEEC,gBAFF,EAGEC,mBAHF,QAIO,kBAJP;AAKA,SAASC,GAAT,QAAoB,sBAApB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,EADI;AAEnBC,EAAAA,YAAY,EAAE;AAFK,CAArB;AAKA,eAAe,UAAUC,KAAK,GAAGH,YAAlB,EAAgCI,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,aAAa,EAAEG,MAAM,CAACE;AAFjB,OAAP;;AAKF,SAAKT,gBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELD,QAAAA,YAAY,EAAEE,MAAM,CAACE;AAFhB,OAAP;;AAKF,SAAKR,mBAAL;AACE,aAAO,EACL,GAAGK,KADE;AAGLF,QAAAA,aAAa,EAAEE,KAAK,CAACF,aAAN,CAAoBM,MAApB,CACZL,YAAD,IAAkBA,YAAY,CAACM,eAAb,KAAiCJ,MAAM,CAACE,OAD7C;AAHV,OAAP;;AAQF;AACE,aAAOH,KAAP;AAvBJ;AAyBD","sourcesContent":["import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"../actions/types\";\nimport { act } from \"react-dom/test-utils\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload,\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload,\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n\n        project_tasks: state.project_tasks.filter(\n          (project_task) => project_task.projectSequence !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}