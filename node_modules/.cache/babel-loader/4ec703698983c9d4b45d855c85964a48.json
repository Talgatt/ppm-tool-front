{"ast":null,"code":"import _objectSpread from\"/Users/talgattulegenov/Desktop/PPMToolFullStack React+Java/ppmtool-react-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{GET_PROJECTS,GET_ERRORS,GET_PROJECT,DELETE_PROJECT}from\"../actions/types\";var initialState={projects:[],project:{}};export default function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case GET_PROJECTS:return _objectSpread(_objectSpread({},state),{},{projects:action.payload});case GET_PROJECT:return _objectSpread(_objectSpread({},state),{},{project:action.payload});case DELETE_PROJECT:return _objectSpread(_objectSpread({},state),{},{projects:state.projects.filter(function(project){return project.projectIdentifier!==action.payload;})});default:return state;}}","map":{"version":3,"sources":["/Users/talgattulegenov/Desktop/PPMToolFullStack React+Java/ppmtool-react-client/src/reducers/projectReducer.js"],"names":["GET_PROJECTS","GET_ERRORS","GET_PROJECT","DELETE_PROJECT","initialState","projects","project","state","action","type","payload","filter","projectIdentifier"],"mappings":"qMAAA,OACEA,YADF,CAEEC,UAFF,CAGEC,WAHF,CAIEC,cAJF,KAKO,kBALP,CAOA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,QAAQ,CAAE,EADS,CAEnBC,OAAO,CAAE,EAFU,CAArB,CAKA,cAAe,WAAwC,IAA9BC,CAAAA,KAA8B,2DAAtBH,YAAsB,IAARI,CAAAA,MAAQ,2CACrD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKT,CAAAA,YAAL,CACE,sCACKO,KADL,MAEEF,QAAQ,CAAEG,MAAM,CAACE,OAFnB,GAKF,IAAKR,CAAAA,WAAL,CACE,sCACKK,KADL,MAEED,OAAO,CAAEE,MAAM,CAACE,OAFlB,GAKF,IAAKP,CAAAA,cAAL,CACE,sCACKI,KADL,MAEEF,QAAQ,CAAEE,KAAK,CAACF,QAAN,CAAeM,MAAf,CACR,SAACL,OAAD,QAAaA,CAAAA,OAAO,CAACM,iBAAR,GAA8BJ,MAAM,CAACE,OAAlD,EADQ,CAFZ,GAOF,QACE,MAAOH,CAAAA,KAAP,CAtBJ,CAwBD","sourcesContent":["import {\n  GET_PROJECTS,\n  GET_ERRORS,\n  GET_PROJECT,\n  DELETE_PROJECT,\n} from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload,\n      };\n\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload,\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          (project) => project.projectIdentifier !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}